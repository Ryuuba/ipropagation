//
// Generated file, do not edit! Created by nedtool 5.6 from msg/ProbabilisticCastHeader.msg.
//

#ifndef __INET_PROBABILISTICCASTHEADER_M_H
#define __INET_PROBABILISTICCASTHEADER_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class ProbabilisticCastHeader;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/Units_m.h" // import inet.common.Units

#include "inet/networklayer/common/IpProtocolId_m.h" // import inet.networklayer.common.IpProtocolId

#include "inet/networklayer/probabilistic/ProbabilisticBroadcastHeader_m.h" // import inet.networklayer.probabilistic.ProbabilisticBroadcastHeader

// cplusplus {{
#include <list>
#include <memory>
#include "inet/common/ProtocolGroup.h"
typedef std::list<inet::L3Address> DestinationList;
typedef std::shared_ptr<const DestinationList> DestinationListPtr;
// }}


namespace inet {

/**
 * Class generated from <tt>msg/ProbabilisticCastHeader.msg:36</tt> by nedtool.
 * <pre>
 * class ProbabilisticCastHeader extends ProbabilisticBroadcastHeader
 * {
 *     long hopCount;
 *     DestinationListPtr forwardingList;
 * }
 * </pre>
 */
class ProbabilisticCastHeader : public ::inet::ProbabilisticBroadcastHeader
{
  protected:
    long hopCount = 0;
    DestinationListPtr forwardingList;

  private:
    void copy(const ProbabilisticCastHeader& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ProbabilisticCastHeader&);

  public:
    ProbabilisticCastHeader();
    ProbabilisticCastHeader(const ProbabilisticCastHeader& other);
    virtual ~ProbabilisticCastHeader();
    ProbabilisticCastHeader& operator=(const ProbabilisticCastHeader& other);
    virtual ProbabilisticCastHeader *dup() const override {return new ProbabilisticCastHeader(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual long getHopCount() const;
    virtual void setHopCount(long hopCount);
    virtual const DestinationListPtr& getForwardingList() const;
    virtual DestinationListPtr& getForwardingListForUpdate() { handleChange();return const_cast<DestinationListPtr&>(const_cast<ProbabilisticCastHeader*>(this)->getForwardingList());}
    virtual void setForwardingList(const DestinationListPtr& forwardingList);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ProbabilisticCastHeader& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ProbabilisticCastHeader& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_PROBABILISTICCASTHEADER_M_H

