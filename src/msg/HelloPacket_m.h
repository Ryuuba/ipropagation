//
// Generated file, do not edit! Created by nedtool 5.5 from HelloPacket.msg.
//

#ifndef __INET_HELLOPACKET_M_H
#define __INET_HELLOPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class HelloMessage;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

#include "inet/linklayer/common/MacAddress_m.h" // import inet.linklayer.common.MacAddress


namespace inet {

/**
 * Enum generated from <tt>HelloPacket.msg:26</tt> by nedtool.
 * <pre>
 * enum HelloMessageType
 * {
 *     REQ = 0;
 *     REP = 1;
 * }
 * </pre>
 */
enum HelloMessageType {
    REQ = 0,
    REP = 1
};

/**
 * Class generated from <tt>HelloPacket.msg:32</tt> by nedtool.
 * <pre>
 * class HelloMessage extends FieldsChunk
 * {
 *     HelloMessageType type;
 *     int host_id;
 *     int sequence_num;
 *     MacAddress srcMacAddress;
 * }
 * </pre>
 */
class HelloMessage : public ::inet::FieldsChunk
{
  protected:
    inet::HelloMessageType type = static_cast<inet::HelloMessageType>(-1);
    int host_id = 0;
    int sequence_num = 0;
    MacAddress srcMacAddress;

  private:
    void copy(const HelloMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const HelloMessage&);

  public:
    HelloMessage();
    HelloMessage(const HelloMessage& other);
    virtual ~HelloMessage();
    HelloMessage& operator=(const HelloMessage& other);
    virtual HelloMessage *dup() const override {return new HelloMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual inet::HelloMessageType getType() const;
    virtual void setType(inet::HelloMessageType type);
    virtual int getHost_id() const;
    virtual void setHost_id(int host_id);
    virtual int getSequence_num() const;
    virtual void setSequence_num(int sequence_num);
    virtual const MacAddress& getSrcMacAddress() const;
    virtual MacAddress& getSrcMacAddressForUpdate() { handleChange();return const_cast<MacAddress&>(const_cast<HelloMessage*>(this)->getSrcMacAddress());}
    virtual void setSrcMacAddress(const MacAddress& srcMacAddress);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const HelloMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, HelloMessage& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_HELLOPACKET_M_H

